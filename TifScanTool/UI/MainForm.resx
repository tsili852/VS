<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="_mainMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>126, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAgxJREFUOE+lkvtL
        U2EYx+0PEbtpFwnBKPGKiJImGP0gYhIYs1E5GF5gIxkpA00JRSmMEF0ohMh+GaRWYlqabMVcNdS2QpaI
        VqiDIYhk397vA6fXhCjyhYdzeM/5fp7vczkAdeL2cwho7v/wWzT1zcN+Pwhr51uY2/y41PQaF+wzKKiZ
        QvaN58g0jyLd5KEUcQbg+84P/Cm2tncQjW3j68YWIqubCC3FcOJc478BAuGoZM6zvoRnakXEruEIjhc4
        /g5gZop9c+voGAyLbQIfeBZxLL9BA1jzXvuGbWamuKh+GmmVbswE19A59FEBbmoAG7YbsLtm2mZmiml9
        cvabNDwpz6YB7LYBoMXCumkJr7LOmnnHzBQ/9X2Bo2cOibm1GsBREbAQiYmw/8lnuCeWkVzcgnZlnw1j
        3HV/wuNXK6i/9x5Hc6wawDlTXHbLJ+LZUBQPRyKwdQdxutwl1h+NLXHh5Ht1ewBHsiwawCW57HyDAfWR
        dvl0uhZQ1eqX8aVc7EKLqrum651ATLf9OJx5XQM4KmY0xPzZ0hFAiQJnXB0WwME0E3IsL5B17ZlADqWb
        NYDrOepdlcysmTWWOrxqbceRWtaLk0VO1XW72D5Vckd2gMBfq8zdpmUG62NJvKM4+XyziDk24xmfWoGE
        s1c0gHPmbrPTpHNJKOCo2G1mZs20zcwUJ5yp1AB5+8/zEwgF5GMVDxh4AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAApllZAJxWVgD6mZkA+ZmZAO2TkwDMgIAA8pmZANKGhgDrl5cA14qKAOqZmQDomZkA3pOTANOM
        jADkmZkA2ZOTALR6egDEhoYAlGZmAI1hYQDdmZkA0pOTAKx5eQDYmZkAxIyMANWZmQDNk5MAs4ODAItm
        ZgDBjo4Az5mZAJlzcwCVcHAAyZmZAMOUlADHmZkAdFlZAIRmZgDFmZkAtYyMAKSAgADBmZkAj3NzAL6b
        mwCoiYkAjXR0ALmZmQDnwcEAc2BgALaZmQBuXV0AW01NALOZmQCWgIAAh3NzAOrKygCzm5sAhXV1AK+d
        nQCrmZkATEREAKOTkwC1paUAfnNzAKeZmQBGQEAAfXNzAEpERABDPj4ApZmZAEVAQACzp6cAj4WFAHdv
        bwBhW1sAe3V1AE9LSwA8OTkAo5ycAHt2dgBHREQAcW1tAJ2ZmQB1c3MARUREAMTCwgCsqqoAwcDAANPP
        zACMhoEA/+/gAOze0QDHdSIA2oIpANWCLwDfizgAoWkxAOaZTQDqo1sArXlEANaYWgDGjFMA8bFwAPa6
        fgDttX0An3pWAP3IkwD0wpEAwJt2ANOrgwCsjW4A/9OmAPvRqAD20KoA2beWAP/ZswDVtZUApIx0AH9u
        XgDPuKEA07ylAHdqXQCCdmoAxbWlAP/s2QCrnpEA6eDXAG9rZwCwrKgA0MzIAOjl4gD9+/kA4uHgAPTe
        xwC2qp0AubGoAPPOoAD106oA8tKtAPbs4ADZ08wA38GZAMTAuwDz59UA8+vgAObf1QDt3L8AureyAObf
        0gDX1tQA5OLcAKCgngDBy8QAZtmMAInVogDM39IAw8zGAP///wD5+fkA9vb2APT09ADx8fEA7+/vAOzs
        7ADr6+sA6OjoAOXl5QDi4uIA4ODgAN7e3gDc3NwA29vbANjY2ADX19cA1dXVANPT0wDR0dEAz8/PAMrK
        ygC/v78Aurq6ALe3twC1tbUAs7OzALCwsACurq4ArKysAKqqqgCoqKgApqamAKOjowChoaEAn5+fAJyc
        nACampoAmZmZAJeXlwCVlZUAk5OTAJGRkQCPj48AjY2NAIuLiwCJiYkAh4eHAH5+fgB6enoAeXl5AHd3
        dwB1dXUAc3NzAHFxcQBvb28AbGxsAGhoaABnZ2cAZWVlAGNjYwBhYWEAXl5eAFxcXABbW1sAWVlZAFNT
        UwBRUVEAT09PAE1NTQBLS0sASUlJAEdHRwBDQ0MAPz8/AD09PQA7OzsAODg4ADU1NQAzMzMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u
        7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u
        7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7L
        4OXfy+7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7V48qnVFVV3Mju7u7u7u7u7u7u7u7u7u7u7u7u7u7K
        1LqcnZ9TRkBR5tzI7u7u7u7u7u7u7u7u7u7u7u7uyuKsopqbolNGPDU3RObcyO7u7u7u7u7u7u7uy9/k
        5ujkwqWlmbKpV0Y8NS8qKz3m3Mju7u7u7u7uw97KyNna0cOtp6irr7GzWEg5LyokHyZF5tvu7u7u7sG4
        qqqqqqqqhYWprK+Nf6WCtbc/LCQfGhYdR+TX7u7ux62tra2rqKanqYWSi3Rbnn1yeYG+OycaFQ8NE0Lk
        1O65sbGppqOll5WRhJCKdFuefXBraW5+xT4jDwsHBRTjwVimoKGDhnGJk4yEkIp0W559cGtoZ2Nlb1pJ
        HgkEBuTB7rm2t1l8dY6TjISQinRbnn1wa2hnY2JgX2R7TBwI5cHu7u7uvLi8u5SPlpCKdFuefXBraGdj
        YmBeXWF63CDmwe7u7u7u7u7uvL3GmId4XJ59cGtoZ2NmanfdMxEFA0vB7u7u7u7u7u7u7u68vMLMv4hz
        bG12gN5NJRIMDA4h7u7u7u7u7u7u7u7u7u7u7u7K1NLY4Ok0IBsYGBku7u7u7u7u7u7u7u7u7u7u7u7O
        4uns7U4xKCIiIik67u7u7u7u7u7u7u7u7u7u7tXl6u3t5tZQMjIyMjZK7u7u7u7u7u7u7u7u7u7u2ubr
        7eHPxFiwsFZBQUNS7u7u7u7u7u7u7u7u7u7T5+zbyruuqKioqKioqNTQ7u7u7u7u7u7u7u7u7u7u2si0
        pKSkpKSkpKSkqcPN7u7u7u7u7u7u7u7u7u7u7u6/n5+fnzgKEDCpwMnE7u7u7u7u7u7u7u7u7u7u7u7u
        7rm5xMRPAQIXLS3u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u
        7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u
        7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u7u
        7u7u7u7u7u7u7v////////////////////////////g////gD///gAP//wAA/+AAAD+AAAAfAAAABwAA
        AAEAAAAAAAAAAIAAAADwAAAA/wAAAP/gAAP//gAP//gAP//AAP/+AAP/8AAP/+AAP//gAP//4Af/////
        ////////////////////////
</value>
  </data>
</root>